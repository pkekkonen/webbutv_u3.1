// In the following line, you should include the prefixes of implementations you want to test.window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;// DON'T use "var indexedDB = ..." if you're not in a function.// Moreover, you may need references to some window.IDB* objects:window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: "readwrite"}; // This line should only be needed if it is needed to support the object's constants for older browserswindow.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)let request = window.indexedDB.open("MyTestDatabase", 3);let db, tx, store, index;//below will happen first time we start up. Once this is done, onsuccess is calledrequest.onupgradeneeded = function(e) {	let db = request.result;	let store = db.createObjectStore("NameOfStore", {keyPath: "qID"});		//set up index to be able to query through	let index = store.createIndex("birthday", "birthday", {unique: true});}request.onerror = function(e) {	alert("An error occurred: " + e.target.errorcode);};request.onsuccess = function(e) {	db = request.result; //the result of opening the db	tx = db.transaction("NameOfStore", "readwrite");	store = tx.objectStore("NameOfStore");	index = store.index("birthday");		db.onerror = function(e) {		alert("ERROR "+ e.target.errorCode);	}	 	store.put({qID: 1, birthday: "970727", name:"Paulina"}); 	store.put({qID: 2, birthday: "710125", name:"Yvonne"});		let p1 = store.get(1);	let p2 = index.get("710125");		p1.onsuccess = function() {		alert(p1.result);		alert(p1.result.name);	}		p2.onsuccess = function() {		alert(p2.result.name);	}	tx.oncomplete = function() {		db.close();	}}// window.onload = function(){// // // // 	(async () => {// // 	  //...// // // // 		const dbName = 'db'// // 		const storeName = 'store1'// // 		const version = 1 //versions start at 1// // // // 		const db = await openDB(dbName, version, {// // 			upgrade(db, oldVersion, newVersion, transaction) {// // 				const store = db.createObjectStore(storeName)// // 				store.put('Hello world!', 'Hello')// // 			}// // 		})// // 	})()// // 	(async () => {// 		//...// 		const dbName = 'db';// 		const storeName = 'store0';// 		const version = 1;// //   		const db = await openDB(dbName, version, {//   			alert("JEdsdsk";)//     		upgrade(db, oldVersion, newVersion, transaction) {//     		alert("EW");//       		const store = db.createObjectStore(storeName)//     	}//   		});//   		alert("JE");// // 		const tx = db.transaction(storeName, 'readwrite');// 		const store = await tx.objectStore(storeName);// // 		const val = 'hey!'// 		const key = 'Hello again'// 		const value = await store.put(val, key)// 		await tx.done//   // 		const item = await db.transaction(storeName).objectStore(storeName).get(key)// 		alert(item);// 	})()// // }