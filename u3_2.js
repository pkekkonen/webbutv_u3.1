var spade = "http://clipart-library.com/images/8TAEAqdTa.png";var zebra = "http://macloo.com/images/african_animals/zebra.png";function sleep(ms) {  return new Promise(resolve => setTimeout(resolve, ms));}//TODO: before closing window, ask if the user wants to save the score and then save it locally in that case// have the name filled in already if (s)he is to savee scores again. Save the name in session$(document).ready(function(){	var score = 0;	function handleClickOnB1() {		if ( $('#b1 img').attr('src') == spade ) {			$('#b1 img').attr('src', zebra);		} else {			$('#b1 img').attr('src', spade);		}		$('#b1').off('click', handleClickOnB1);	}		window.onbeforeunload = function() {		return "Did you save your stuff?";	}	  	$("#show-points").click(function(){    	$("#points").toggle();    	loseLife();	});		async function countDown(steps, myResolve) {		var curr = steps.shift();	    $('#'+curr).fadeIn(300, function () {         	$('#'+curr).fadeOut(300, function() {         		if(steps.length > 0)         			countDown(steps);         	});   		});	   	}   	   	async function loseLife() {   		$(".alive").first().fadeTo("slow", 0.3).addClass("dead").removeClass('alive');   		if(! ($('.alive').length) ) {			$(".centered").fadeToggle(); 			await sleep(1000);			var name = prompt("Write in your name to save your score!");			if(!localStorage.getItem(name) || parseInt(localStorage.getItem(name))<score)				localStorage.setItem(name, score.toString);		}   	}   	   	function revive() {		$(".centered").fadeToggle();   		$(".dead").fadeTo("slow", 1).addClass("alive").removeClass('dead');   	}	$(document).keydown(function(event) {  		if(! ($('.alive').length) )     	revive();          	});    $("#play").click(async function(){    	//3,2,1, GO uusing fade in, fade to, fade out    			 countDown(["3","2","1","go"]);// 		let myPromise = new Promise(function(myResolve, myReject) {// 			countDown(["3","2","1","go"], myResolve);		//   		});//      	//      	await myPromise;//      	     	    	var noOfTurns = 5;    	var isLast = false;    	for(i =0; i < noOfTurns; i++){    		if(i == noOfTurns-1)     			isLast=true;    		var imgs = ["b1","b2","b3"];    		var randomIndex = Math.floor(Math.random()*imgs.length);    		var a = imgs[randomIndex];    		imgs.splice(randomIndex, 1);    		var b = imgs[Math.floor(Math.random()*imgs.length)];    		switchPlaces(a,b, isLast);    		await sleep(700);    		if(isLast)     		$('#b1').on('click', handleClickOnB1);    	}    });        function switchPlaces(b1, b2, isLast) {    	var b1_pos = $("#"+b1).position().left;    	var b2_pos = $("#"+b2).position().left;    	var dist = Math.abs(b1_pos-b2_pos);    	var biggest = b1_pos > b2_pos? b1:b2;    	var smallest =  b1_pos < b2_pos? b1:b2;    	$("#"+smallest)            .animate({ "top": "+=100" }, "fast" )            .animate({ "left": "+="+dist}, "fast" )            .animate({ "top": "-=100px" }, "fast" )        $("#"+biggest)            .animate({ "top": "-=100" }, "fast" )            .animate({ "left": "-="+dist}, "fast" )            .animate({ "top": "+=100px" }, "fast"// , //             {complete: function() {//             	alert("HEJ");// //             if(isLast) $('#b1').on('click', handleClickOnB1);//             }} )    }        $(".block").hover(function() {    	$(this).css({"outline": "red solid 2px", "border":"2px solid red", "margin": "auto"});    });        $(".block").mouseleave(function(){    	$(this).css({"outline": "", "border":"", "margin": ""});  	    });});// 	// 	$( "#right" ).click(function(){move([3,3,2,2,1,1,5,5]);});//  // 	$( "#left" ).click(function(){moveLeft(0);});// // 	$( "#up" ).click(function() {// 	  $( ".block" ).animate({ "bottom": "+=50px" }, "slow" );// 	});//  // 	$( "#down" ).click(function(){// 		$( ".block" ).animate(// 			{ "bottom": "-=200" }, // 		//	{complete:  function() { alert('end ani'); } },// 			"slow" // 		);// 	});// 	// 	// 	var data = {//   		left:{left:""},//   		right:{right:"+=5"},//   		up:{up:""},//   down:{down:""}// }// 	//left:1, right:3, down=2, up=5// 	function move(moves) {// 		var currentElement = moves.shift();// 		var direction = (currentElement == 1 || currentElement == 3)? "left":"bottom";// 		var distance = (currentElement == 3 || currentElement == 5)? "+=50px":"-=50px";// 		alert(direction+" "+distance);// 		$( "#block" ).animate({ direction: distance },{complete: function() {// 			if(moves.length > 0) {// 				move(moves);// 			} // 		}}, "slow");// 	}// // 	function moveRight(noLeft) {// 		$( "#block" ).animate({ "left": "+=50px" },{complete: function() {if(noLeft <10) moveLeft(noLeft+1);}}, "slow");// 	}//TODO: what is rollover????/*Gör ett JavaScript-program som skapar följande effekter:Visar och gömmer ett HTML-element (show, hide )Gör även ett program som skapar följande animation:Förändrar ett HTML-elements stilsättning (animate)Lägg till:Easing (linear eller swing) till animationen och testa med olika hastigheterAtt en händelse sker efter animationen är klar (callback funktion)evt.preventDefault eller return false)pageX, pageYDokument och fönsterhändelser (någon av load, resize, scroll eller unload)*/