var spade = "http://clipart-library.com/images/8TAEAqdTa.png";var cardImage = "http://clipart-library.com/data_images/219.png";function sleep(ms) {  return new Promise(resolve => setTimeout(resolve, ms));}$(document).ready(function() {  $('#main-menu').smartmenus();  var score = 0;		//when it's time to choose  function makeCardsClickable() {    $('#b1').on('click', handleClickOnVictoryCard);    $('#b2').on('click', handleClickOnNonVictoryCards);    $('#b3').on('click', handleClickOnNonVictoryCards);  }		//when still shuffling  function makeCardsUnclickable() {    $('#b1').off('click', handleClickOnVictoryCard);    $('#b2').off('click', handleClickOnNonVictoryCards);    $('#b3').off('click', handleClickOnNonVictoryCards);  }		//if user chooses wrong card  async function handleClickOnNonVictoryCards() {    loseLife();    toggleVictoryCard();    makeCardsUnclickable();    await sleep(1000);    toggleVictoryCard();  }  function updateScore() {    $("#points").text("Points: " + score);  }		//if user chooses the right card  async function handleClickOnVictoryCard() {    toggleVictoryCard();    score += 1;    updateScore()    makeCardsUnclickable();    await sleep(1000);    toggleVictoryCard();  }  	//shows the right card  function toggleVictoryCard() {    if ($('#b1 img').attr('src') == spade) {      $('#b1 img').attr('src', cardImage);    } else {      $('#b1 img').attr('src', spade);    }  }	//makes sure user doesn't accidentally close the page and lose progress   globalThis.onbeforeunload = function() {    return "Did you save your stuff?";  }  $("#show-points").click(function() {    $("#points").toggle();  });  $("#show-lifes").click(function() {    $("#lifes").show();  });  $("#hide-lifes").click(function() {    $("#lifes").hide();  });	//count down before shuffling  async function countDown(steps, myResolve) {    var curr = steps.shift();    $('#' + curr).fadeIn(300, function() {      $('#' + curr).fadeOut(300, function() {        if (steps.length > 0)          countDown(steps);      });    });  }  async function loseLife() {    $(".alive").first().fadeTo("slow", 0.3).addClass("dead").removeClass('alive');        //if no more lifes    if (!($('.alive').length)) {			//animates the correct card      $(".right-one")        .animate({          "top": "-=100"        }, "slow", "swing");      $(".right-one").animate({        "top": "+=100px"      }, {        duration: "slow",        complete: function() {          isDead();        }      });    }  }  async function isDead() {  	//show Game over text    $(".centered").fadeToggle();    await sleep(1000);    var name = prompt("Write in your name to save your score!");    score = 0;    updateScore();  }  function revive() {    $(".centered").fadeToggle();    $(".dead").fadeTo("slow", 1).addClass("alive").removeClass('dead');  }		//starts over if user presses any key when dead  $(document).keydown(function(event) {    if (!($('.alive').length))      revive();  });	//starts the game  $("#play").click(async function() {    toggleVictoryCard(); //show card    countDown(["3", "2", "1", "go"]);    await sleep(2000);    toggleVictoryCard();    var noOfTurns = 5;    var isLast = false;        //randomizes how cards are to be shuffled    for (i = 0; i < noOfTurns; i++) {      if (i == noOfTurns - 1)        isLast = true;      var imgs = ["b1", "b2", "b3"];      var randomIndex = Math.floor(Math.random() * imgs.length);      var a = imgs[randomIndex];      imgs.splice(randomIndex, 1);      var b = imgs[Math.floor(Math.random() * imgs.length)];      switchPlaces(a, b);      await sleep(700);      if (isLast) { //user is now allowed to play        makeCardsClickable();      }    }  });		//switches places between two (randomized cards)  function switchPlaces(b1, b2) {    var b1_pos = $("#" + b1).position().left;    var b2_pos = $("#" + b2).position().left;    var dist = Math.abs(b1_pos - b2_pos);    var biggest = b1_pos > b2_pos ? b1 : b2;    var smallest = b1_pos < b2_pos ? b1 : b2;    $("#" + smallest)      .animate({        "top": "+=100"      }, "fast", "swing")      .animate({        "left": "+=" + dist      }, "fast", "swing")      .animate({        "top": "-=100px"      }, "fast", "swing")    $("#" + biggest)      .animate({        "top": "-=100"      }, "fast", "swing")      .animate({        "left": "-=" + dist      }, "fast", "swing")      .animate({        "top": "+=100px"      }, "fast", "swing")  }  $(".block").hover(function() {    $(this).css({      "outline": "red solid 2px",      "border": "2px solid red",      "margin": "auto"    });  });  $(".block").mouseleave(function() {    $(this).css({      "outline": "",      "border": "",      "margin": ""    });  });});