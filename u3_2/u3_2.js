var spade = "http://clipart-library.com/images/8TAEAqdTa.png";var zebra = "http://macloo.com/images/african_animals/zebra.png";function sleep(ms) {  return new Promise(resolve => setTimeout(resolve, ms));}//TODO: before closing window, ask if the user wants to save the score and then save it locally in that case// have the name filled in already if (s)he is to savee scores again. Save the name in session$(document).ready(function(){	  $('#main-menu').smartmenus();	showScore();	function showScore() {		var result = "";		for ( var i = 0, len = localStorage.length; i < len; ++i ) {			var key = localStorage.key(i);			result += key;			result += " : ";			result += localStorage.getItem(key);			result += "\n";		}		$("#scores").text(result);	}		var score = 0;		function makeCardsClickable() {		$('#b1').on('click', handleClickOnB1);		$('#b2').on('click', handleClickOnNonVictoryCards);		$('#b3').on('click', handleClickOnNonVictoryCards);	}		function makeCardsUnclickable() {		$('#b1').off('click', handleClickOnB1);		$('#b2').off('click', handleClickOnNonVictoryCards);		$('#b3').off('click', handleClickOnNonVictoryCards);	}		async function handleClickOnNonVictoryCards() {		loseLife();		toggleVictoryCard();		makeCardsUnclickable();		await sleep(1000);		toggleVictoryCard();	}		async function handleClickOnB1() {		toggleVictoryCard();		score +=1;		makeCardsUnclickable();		await sleep(1000);		toggleVictoryCard();	}		function toggleVictoryCard() {		if ( $('#b1 img').attr('src') == spade ) {			$('#b1 img').attr('src', zebra);		} else {			$('#b1 img').attr('src', spade);		}	}		globalThis.onbeforeunload = function() {		return "Did you save your stuff?";	}	  $("#show-points").click(function(){		$("#points").toggle();	});	  $("#show-lifes").click(function(){		$("#lifes").show();	});  $("#hide-lifes").click(function(){		$("#lifes").hide();	});		async function countDown(steps, myResolve) {		var curr = steps.shift();	    $('#'+curr).fadeIn(300, function () {         	$('#'+curr).fadeOut(300, function() {         		if(steps.length > 0)         			countDown(steps);         	});   		});	   	}   	   	async function loseLife() {   		$(".alive").first().fadeTo("slow", 0.3).addClass("dead").removeClass('alive');   		if(! ($('.alive').length) ) {   		   		 	$(".right-one")            .animate({ "top": "-=100" }, "slow", "swing" );            $(".right-one").animate({ "top": "+=100px" }, {            					duration: "slow",             					complete:  function(){												isDead();          					            					}} );			}		   	}   	   	async function isDead() {			$(".centered").fadeToggle();			await sleep(1000);			var name = prompt("Write in your name to save your score!");			if(!localStorage.getItem(name) || parseInt(localStorage.getItem(name))<score)				localStorage.setItem(name, score.toString());			score = 0;			showScore();    	   	}   	   	function revive() {		$(".centered").fadeToggle();   		$(".dead").fadeTo("slow", 1).addClass("alive").removeClass('dead');   	}	$(document).keydown(function(event) {  		if(! ($('.alive').length) )     	revive();          	});    $("#play").click(async function(){    	toggleVictoryCard(); //show card		 	countDown(["3","2","1","go"]);						await sleep(2000);			toggleVictoryCard();     	    	var noOfTurns = 5;    	var isLast = false;    	for(i =0; i < noOfTurns; i++){    		if(i == noOfTurns-1)     			isLast=true;    		var imgs = ["b1","b2","b3"];    		var randomIndex = Math.floor(Math.random()*imgs.length);    		var a = imgs[randomIndex];    		imgs.splice(randomIndex, 1);    		var b = imgs[Math.floor(Math.random()*imgs.length)];    		switchPlaces(a,b, isLast);    		await sleep(700);    		if(isLast) {    			makeCardsClickable();				}    	}    });        function switchPlaces(b1, b2, isLast) {    	var b1_pos = $("#"+b1).position().left;    	var b2_pos = $("#"+b2).position().left;    	var dist = Math.abs(b1_pos-b2_pos);    	var biggest = b1_pos > b2_pos? b1:b2;    	var smallest =  b1_pos < b2_pos? b1:b2;    	$("#"+smallest)            .animate({ "top": "+=100" }, "fast", "swing" )            .animate({ "left": "+="+dist}, "fast", "swing" )            .animate({ "top": "-=100px" }, "fast", "swing" )        $("#"+biggest)            .animate({ "top": "-=100" }, "fast", "swing" )            .animate({ "left": "-="+dist}, "fast", "swing" )            .animate({ "top": "+=100px" }, "fast", "swing")    }        $(".block").hover(function() {    	$(this).css({"outline": "red solid 2px", "border":"2px solid red", "margin": "auto"});    });        $(".block").mouseleave(function(){    	$(this).css({"outline": "", "border":"", "margin": ""});  	    });});